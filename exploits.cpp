#include "includes.h"

Exploits		g_exploits{};;

void Exploits::Loss( INetChannel* channel ) {
	// can cause artifacts sometimes such as airstuck but
	// for the most part it provides a pretty good anti-aim 
	// utility.

	const int seq = g_cl.m_lastseq;
	const int ack = g_cl.m_lastack;

	g_cl.m_lastseq = channel->m_out_seq;
	g_cl.m_lastack = channel->m_in_seq;

	if ( !g_input.GetKeyState( g_menu.main.movement.lagwalk.get( ) ) )
		return;

	if( !g_cl.m_cmd || g_cl.m_cmd->m_tick % 2 == 0 )
		return;

	if( g_cl.m_lastseq == seq && g_cl.m_lastack == ack )
		return;

	if( g_aimbot.m_stop || g_cl.m_shot || g_cl.m_old_shot )
		return;

	channel->m_out_seq = seq;
	channel->m_in_seq = ack;
}

void Exploits::Team() {
	if( !g_menu.main.misc.spawn_exploit.get( ) )
		return;

	// get our teams for the exploit.
	int team = g_cl.m_local->m_iTeamNum();

	// spawn exploit.
	if ( g_cl.m_local->alive() && !g_cl.m_local->m_bControlledBot() && (team == TEAM_COUNTERTERRORISTS || team == TEAM_TERRORISTS) ) {
		int health = g_cl.m_local->m_iHealth();

		if ( health > g_menu.main.misc.spawn_exploit_health.get() ) {
			g_notify.add(XOR("executing exploit\n"));

			// execute this command which sets our team to unassigned and our iTeamNum to zero.
			g_csgo.m_engine->ExecuteClientCmd(XOR("resetteam"));

			// rejoin our team, otherwise we are unassigned.
			g_csgo.m_engine->ExecuteClientCmd(tfm::format(XOR("jointeam %s 1"), team).data());
		}
	}
}

void Exploits::Command() {
	int active = g_menu.main.misc.active_exploit.get( );

	if( active == 0 || m_last_command >= g_csgo.m_globals->m_curtime )
		return;

	// team exploit.
	if ( active == 1 ) {
		int team = g_csgo.RandomInt(1, 3);

		// execute our spammer. the second argument forces the server to listen even if we are spamming it.
		g_csgo.m_engine->ExecuteClientCmd(tfm::format(XOR("jointeam %s 1"), team).data());

		// waiting this long might be overkill but the server only allows 40 messages by default (sv_quota_stringcmdspersecond).
		m_last_command = g_csgo.m_globals->m_curtime + CS_COMMAND_MAX_RATE;
	}

	// deathmatch godmode.
	else { 	
		// run our exploit command.
		g_csgo.m_engine->ExecuteClientCmd(XOR("open_buymenu"));

		// we can add some extra time to this because it already adds 10 to our time anyway. 
		m_last_command = g_csgo.m_globals->m_curtime + CS_COMMAND_MAX_RATE + 5;
	}
}
